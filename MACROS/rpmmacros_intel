%debug_package %{nil}

%tpls_compiler       intel
%tpls_libs           shared
# alterlake, cascadelake
%tpls_host           cascadelake
%tpls_gpu            cuda

# compiler specific settings

# shared settings
%tpls_flavor       %{tpls_compiler}-%{tpls_host}-%{tpls_gpu}-%{tpls_libs}
%tpls_prefix       /opt/tpls/%{tpls_flavor}
%tpls_mklroot     /opt/intel/oneapi/mkl/latest

%tpls_ld            xild
%tpls_ar            xiar
%tpls_cc            icx
%tpls_cxx           icpx
%tpls_fc            ifx
%tpls_cpp			ixc -E
%tpls_cxxcpp		icpx -E
%tpls_arflags        cru
%tpls_coptflags      -O3 -mtune=%{tpls_host} -fp-model precise -no-ftz
%tpls_cxxoptflags    -O3 -mtune=%{tpls_host} -fp-model precise -no-ftz
%tpls_foptflags      -O3 -mtune=%{tpls_host} -fp-model precise -no-ftz -i4
%tpls_includes      -I%{tpls_prefix}/include
%tpls_comp_ldflags   -L%{tpls_mklroot}/lib -L/opt/intel/oneapi/compiler/latest/lib
%tpls_comp_rpath    -Wl,-rpath,%{tpls_mklroot}/lib -Wl,-rpath,/opt/intel/oneapi/compiler/latest/lib

# library dependencies
%tpls_comp_minver   2024.0.1
%tpls_rpm_cc        intel-oneapi-compiler-dpcpp-cpp
%tpls_rpm_cxx       intel-oneapi-compiler-dpcpp-cpp
%tpls_rpm_fc        intel-oneapi-compiler-fortran



# more macros
%tpls_cuda        1
%tpls_rocm        0
%tpls_libdir        lib
%tpls_compilers LD=%{tpls_ld} AR=%{tpls_ar} CC=%{tpls_cc} CXX=%{tpls_cxx} FC=%{tpls_fc}
%tpls_configure LDFLAGS="%{tpls_ldflags} %{tpls_rpath}" %{tpls_compilers} ./configure --prefix=%{tpls_prefix}
%tpls_configure_noprefixdir LDFLAGS="%{tpls_comp_ldflags} %{tpls_comp_rpath}" %{tpls_compilers} ./configure --prefix=%{tpls_prefix}
%tpls_remove_la_files    find %{buildroot} -name '*.la' -delete
%tpls_ldflags      -L/opt/tpls/%{tpls_flavor}/%{tpls_libdir} %{tpls_comp_ldflags}
%tpls_rpath       -Wl,-rpath,/opt/tpls/%{tpls_flavor}/%{tpls_libdir} %{tpls_comp_rpath}
%tpls_ld_library_path %{tpls_mklroot}/lib:/opt/intel/oneapi/compiler/latest/lib:%{tpls_prefix}/%{tpls_libdir}



%tpls_mkl_includes      -I%{tpls_mklroot}/include

%tpls_mkl_static  -Wl,--start-group %{tpls_mklroot}/lib/libmkl_intel_lp64.a %{tpls_mklroot}/lib/libmkl_intel_thread.a %{tpls_mklroot}/lib/libmkl_core.a -Wl,--end-group -liomp5 -lpthread -lm -ldl
%tpls_mkl_mpi_static %{tpls_mklroot}/lib/libmkl_scalapack_lp64.a -Wl,--start-group %{tpls_mklroot}/lib/libmkl_intel_lp64.a %{tpls_mklroot}/lib/libmkl_intel_thread.a %{tpls_mklroot}/lib/libmkl_core.a %{tpls_mklroot}/lib/libmkl_blacs_openmpi_lp64.a -Wl,--end-group -liomp5 -lpthread -lm -ldl

%tpls_mkl_shared        -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl
%tpls_mkl_mpi_shared    -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_blacs_openmpi_lp64 -liomp5 -lpthread -lm -ldl


%setup_tpls_env() { \
  export LD=%{tpls_ld} \
  export AR=%{tpls_ar} \
  export CC=%{tpls_cc} \
  export CPP="%{tpls_cc} -E" \
  export CXXCPP="%{tpls_cxx} -E" \
  export CXX=%{tpls_cxx} \
  export FC=%{tpls_fc} \
  export F77=%{tpls_fc} \
  export FF=%{tpls_fc} \
  export CFLAGS="%{tpls_coptflags} -I%{tpls_prefix}/include" \
  export CXXFLAGS="%{tpls_cxxoptflags} -I%{tpls_prefix}/include" \
  export FFLAGS="%{tpls_foptflags}" \
  export FCLAGS="%{tpls_foptflags}" \
  # check if the NVIDIA compilers are used and in the path \
  if [ "%{tpls_gpu}" == "cuda" ]; then \
    if [[ ":$PATH:" != *:/opt/nvidia/hpc_sdk/Linux_x86_64/latest/compilers/bin* ]]; then \
      export PATH="/opt/nvidia/hpc_sdk/Linux_x86_64/latest/compilers/bin:$PATH"; \
    fi; \
  fi; \
  # check if ROCM is used and in the path \
  if [ "%{tpls_gpu}" == "rocm" ]; then \
    if [[ ":$PATH:" != *:/opt/rocm/bin* ]]; then \
      export PATH="/opt/rocm/bin:$PATH"; \
    fi; \
  fi; \
  # add the TPLS binary directory \
  if [[ ":$PATH:" != *:%{tpls_prefix}/bin* ]]; then \
    export PATH="%{tpls_prefix}/bin:$PATH"; \
  fi; \
  # setup the Intel OneAPI (excluding ROCM) \
  if [ "%{tpls_gpu}" != "lapack" ]; then \
    if [ "$SETVARS_COMPLETED" != "1" ]; then \
      source /opt/intel/oneapi/setvars.sh intel64; \
    fi; \
  fi; \
}

%error_if_not_lapack() { \
  if [ "%{tpls_gpu}" != "lapack" ] || [ "%{tpls_compiler}" != "gnu" ]; then \
    echo "Error: We only want to compile this library for tpls-gnu-lapack-* flavors!"; \
    exit 1; \
  fi; \
}
